{"version":3,"sources":["components/Navbar/index.js","utils/API.js","components/Jumbotron/index.js","pages/Saved.js","pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["Navb","react_default","a","createElement","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","API","addBooks","book","axios","post","deleteBook","delete","getBooks","get","searchBooks","concat","Jumbot","Container","Jumbotron","Saved","state","books","title","authors","description","image","link","loadBooks","console","log","then","res","data","_this","setState","catch","err","this","_this2","components_Jumbotron","Row","length","Col","map","Card","key","style","width","margin","Img","src","Body","Button","onClick","_id","Text","Component","Search","handleInputChange","event","_event$target","target","name","value","Object","defineProperty","handleFormSubmit","preventDefault","items","LoadBook","saveButtonSubmit","infoSplit","split","Form","Group","Label","Control","onChange","type","placeholder","Media","volumeInfo","imageLinks","Image","height","thumbnail","alt","previewLink","App","react_router_dom","components_Navbar","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c04c4d66.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nfunction Navb() {\n\nreturn (\n  <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n    <Navbar.Brand href=\"#home\">Google Books</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      \n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/\">Search</Nav.Link>\n        <Nav.Link href=\"/saved\">Save</Nav.Link>\n      </Nav>\n\n    </Navbar.Collapse>\n  </Navbar>\n)};\n\nexport default Navb;","import axios from \"axios\";\n\nexport default ({\n    // save new book\n    addBooks: function (book) {\n        return axios.post(\"/api/books\", book);\n    },\n    // delete book\n    deleteBook: function (id) {\n        return axios.delete(\"/api/books/\" + id);\n    },\n    // get saved books\n    getBooks: function(){\n        return axios.get(\"/api/books\")\n    },\n    // search books\n    searchBooks: function(book){\n        return axios.get(`/api/search/${book}`);\n    }\n});","import React from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport \"./style.css\";\n\n\n\nfunction Jumbot () {\n\nreturn (\n<Container className=\"heading-title\">\n    <Jumbotron>\n\n        <Container>\n            <div className=\"text-center\">\n                <h1> Google Books Search</h1>\n            </div>\n        </Container>\n\n    </Jumbotron>\n</Container>\n)\n};\n\nexport default Jumbot;","import React, { Component } from 'react';\nimport { Container, Button, Card, Col, Row } from 'react-bootstrap';\nimport API from '../utils/API';\nimport Header from \"../components/Jumbotron/index\";\n\n\n\nclass Saved extends Component {\n    state = {\n        books: [],\n        title: \"\",\n        authors: \"\",\n        description: \"\",\n        image:\"\",\n        link: \"\"\n    };\n\n    componentDidMount() {\n        console.log(\"component did mount\")\n        this.loadBooks()\n    };\n\n    loadBooks = () => {\n        console.log(\"inside load books\")\n        API.getBooks()\n        \n            .then(res => {\n                console.log(res.data)\n                this.setState({ books: res.data, title: res.data.title, authors: res.data.authors, description: res.data.description, image: res.data.image, link: res.data.link })\n                })\n                .catch(err => console.log(err))\n\n    }\n\n    deleteBook = id => {\n        API.deleteBook(id)\n            .then(res => this.loadBooks())\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        return (\n            <div>\n            <Header/>\n            <Container className=\"results\">\n                <h1 id=\"result\">Your Saved Books:</h1>\n                 <Row className=\"justify-content-center\">\n                {this.state.books.length ? (\n                    <Row>\n                        <Col>\n                            {this.state.books.map(book => (\n                            <Card key={book.title} style={{ width: '100%', margin: '10px'}} className=\"shadow-sm\">\n                                <Row>\n                                    <Col className=\"col-3\">\n                                        <Card.Img className=\"ml-5 pl-5 pt-5\" style={{width: \"45%\"}} src={book.image}></Card.Img>\n                                    </Col>\n                                    <Col className=\"col-9\">\n                                        <Card.Body>\n                                        <Button variant=\"danger\" className=\"float-right\" onClick={() => this.deleteBook(book._id)}>Delete</Button>\n                                        <Button className=\"float-right mr-2\" href={book.link}>View</Button>\n                                            <Card.Text ><strong>{book.title}</strong></Card.Text>\n                                            <Card.Text >Written By: <strong>{book.authors}</strong></Card.Text>\n                                            <Card.Text >{book.description}</Card.Text>\n                                        </Card.Body>\n                                    </Col>\n                                </Row>\n                                </Card>\n                            ))}\n                        </Col>\n                    </Row>\n                ) : (\n                    <h3>No Results to Display</h3>\n                )}\n             </Row>  \n   \n            </Container>\n            </div>\n        )\n    };\n\n\n}\n\nexport default Saved;\n\n\n\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron/index\";\nimport { Container, Media, Button, Image, Form } from \"react-bootstrap\";\nimport API from \"../utils/API\";\nimport \"./style.css\";\nclass Search extends Component {\n    state = {\n        books: [],\n        title: \"\",\n        authors: \"\",\n        description: \"\",\n        image: \"\",\n        link: \"\"\n    }\n    componentDidMount() {\n        this.LoadBook()\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n    handleFormSubmit = event => {\n        event.preventDefault()\n        API.searchBooks(this.state.title)\n            .then(res => this.setState({ books: res.data.items }))\n\n            .catch(err => console.log(err))\n    }\n    LoadBook = () => {\n        API.searchBooks(this.state.title)\n            .then(res => {\n\n                this.setState({ books: res.data.items })\n                console.log(res.data.items);\n            })\n    }\n    saveButtonSubmit = (event) => {\n        event.preventDefault()\n        const infoArr = event.target.value;\n        const infoSplit = infoArr.split(\",\")\n        API.addBooks({\n            title: infoSplit[0],\n            authors: infoSplit[2],\n            description: event.target.name,\n            image: infoSplit[1],\n            link: infoSplit[3]\n        }).then(res => {\n            console.log(res)\n        })\n            .catch(err => console.log(err))\n    }\n    render() {\n        return (\n            <div>\n                <Jumbotron />\n\n                <Container className=\"search-container\">\n                    <h4>Book Search</h4>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Book</Form.Label>\n                            <Form.Control name=\"title\" value={this.state.title} onChange={this.handleInputChange} type=\"text\" placeholder=\"Search\" />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.handleFormSubmit}>\n                            Submit\n                    </Button>\n                    </Form>\n                </Container>\n                <Container className=\"results\">\n                    <h3 id=\"result\">Results:</h3>\n                    <div>\n                        {this.state.books.map(book => (\n                            <div className=\"media-div\">\n                                <Media key={book.title}>\n                                    <Media.Body>\n                                        {book.volumeInfo.imageLinks ? (\n                                            <Image\n                                                width={100}\n                                                height={100}\n                                                className=\"align-self-start mr-3\"\n                                                src={book.volumeInfo.imageLinks.thumbnail}\n                                                alt=\"Image\"\n                                            />\n                                        ) : (\n                                                <Image\n                                                    width={100}\n                                                    height={100}\n                                                    className=\"align-self-start mr-3\"\n                                                    src=\"placeholder\"\n                                                    alt=\"Image\"\n                                                />\n                                            )\n                                        }\n                                        <h5><strong>\n                                            title: {book.volumeInfo.title}\n                                        </strong></h5>\n\n                                        {book.volumeInfo.authors ? (\n                                            <h6><strong>\n                                                Author: {book.volumeInfo.authors[0]}\n                                            </strong></h6>\n                                        ) : (\n                                                <h6><strong>\n                                                    Author: Not Defined\n                            </strong></h6>\n                                            )\n                                        }\n                                        <p>\n                                            Description: {book.volumeInfo.description}\n                                        </p>\n                                    </Media.Body>\n                                    <Button variant=\"danger\" href={book.volumeInfo.previewLink}>View</Button>\n                                    <Button variant=\"success\" type=\"submit\" onClick={this.saveButtonSubmit} name={book.volumeInfo.description} value={[book.volumeInfo.title, book.volumeInfo.imageLinks.thumbnail, book.volumeInfo.authors[0], book.volumeInfo.previewLink]}>Save</Button>\n                                </Media>\n                            </div>\n\n                        ))}\n                    </div>\n\n                </Container>\n            </div>\n        );\n    }\n}\nexport default Search;","import React from \"react\";\nimport Navbar from \"./components/Navbar/index\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Saved from \"./pages/Saved\"\nimport Search from \"./pages/Search\"\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n        </Switch>\n      </div>\n    </Router>\n      \n    </div>\n  );\n}\n\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}